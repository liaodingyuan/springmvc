<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 演示一对一查询 ，一对多查询 -->
<mapper namespace="liaody.entity.mapper.ClassMapper">
	<!-- 一对一 -->
	
	<!-- 一对多 -->
	<!-- 方式一：嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集 -->
	<select id="getClass3" parameterType="int" resultMap="ClassResultMap3">
		select *
		from class c, teacher t,student s where c.teacher_id=t.t_id and
		c.C_id=s.class_id and c.c_id=#{id}
	</select>
	<resultMap type="liaody.entity.Classes" id="ClassResultMap3">
		<id property="id" column="c_id" />
		<result property="name" column="c_name" />
		<!-- 一对一查询使用 association -->
		<association property="teacher" javaType="liaody.entity.Teacher">
			<id property="id" column="t_id" />
			<result property="name" column="t_name" />
		</association>
		<!-- 一对多使用collection 注意类型使用的是ofType -->
		<collection property="students" ofType="liaody.entity.Student">
			<id property="id" column="s_id" />
			<result property="name" column="s_name" />
		</collection>
	</resultMap>
	<!-- 方式二：嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型 -->
	<select id="getTeacher4" parameterType="int" resultType="liaody.entity.Teacher">
		select *
		from teacher where t_id=#{id}
	</select>
	<select id="getStudents4" parameterType="int" resultType="liaody.entity.Student">
		select
		 s_id id,s_name name from student where class_id=#{id}
	</select>
	<!-- resultMap是关键 -->
	<resultMap type="liaody.entity.Classes" id="ClassResultMap4">
		<id property="id" column="c_id" />
		<result property="name" column="c_name" />
		<!-- column 要是主键 -->
		<association property="teacher" column="teacher_id"
			javaType="liaody.entity.Teacher" select="getTeacher4">
		</association>
		<collection property="students" column="c_id"
			ofType="liaody.entity.Student" select="getStudents4"></collection>
	</resultMap>
	<select id="getClass4" parameterType="int" resultMap="ClassResultMap4">
		select *
		from class where c_id=#{id}
	</select>

</mapper>